#
# Used by github actions to build and push docker image to ECR
#

version: '3'

vars:
  AWS_REGION: "eu-west-2"

tasks:
  build:
    desc: Build this docker image
    vars:
      PLATFORM: '{{.PLATFORM}}'
      PLATFORM_SUFFIX: '{{.PLATFORM_SUFFIX}}'
      AWS_ACC: '{{.AWS_ACC}}'
      SFRUNNER_VER: '{{.SFRUNNER_VER}}'
    requires:
      vars: [PLATFORM, PLATFORM_SUFFIX, AWS_ACC, SFRUNNER_VER]
    dir: src
    cmds:
      - docker build -t sfrunner:latest-{{.PLATFORM_SUFFIX}} --platform {{.PLATFORM}} --build-arg AWS_ACC={{.AWS_ACC}} --build-arg SFRUNNER_VER={{.SFRUNNER_VER}} .

  run:
    desc: Runs a shell inside the sfrunner image
    cmds:
      - docker run --rm --volume $HOME:/localhost sfrunner:latest --login

  install:
    desc: Gives script to install 'sfrunner' as local command
    cmds:
      - docker run --rm --volume $HOME:/localhost sfrunner:latest init | bash

  ecr-login:
    internal: false
    desc: Docker login to ECR so one can send/receive docker images.  Must have role assumed, via Leapp
    cmds:
      - aws ecr get-login-password --region {{.AWS_REGION}} | docker login --username AWS --password-stdin {{.ECR_HOST}}

  ecr-push:
    desc: Pushes the sfrunner image to ECR
    requires:
      vars: [ECR_HOST, REPO_NAME, PLATFORM_SUFFIX, VERSION]
    vars:
      ECR_REPO: '{{.ECR_HOST}}/{{.REPO_NAME}}'
      PLATFORM_SUFFIX: '{{.PLATFORM_SUFFIX}}'
      VERSION: '{{.VERSION}}'
      NEW_TAG: '{{.ECR_REPO}}:{{.VERSION}}-{{.PLATFORM_SUFFIX}}'
    cmds:
      - task: ecr-login
      - docker tag sfrunner:latest-{{.PLATFORM_SUFFIX}} {{.NEW_TAG}}
      - docker push {{.NEW_TAG}}


  push-manifest:
    desc: Pushes the manifest to ECR
    vars:
      ECR_HOST: '{{.ECR_HOST}}'
      REPO_NAME: '{{.REPO_NAME}}'
      ECR_REPO: '{{.ECR_HOST}}/{{.REPO_NAME}}'
      VERSION: '{{.VERSION}}'
    requires:
      vars: [ ECR_HOST, REPO_NAME, VERSION ]
    cmds:
      - docker manifest create {{.ECR_REPO}}:{{.VERSION}} {{.ECR_REPO}}:{{.VERSION}}-arm64 {{.ECR_REPO}}:{{.VERSION}}-amd64
      - docker manifest push {{.ECR_REPO}}:{{.VERSION}}

  ecr-install:
    desc: Installs sfrunner from remote ECR repo
    vars:
      ECR_HOST: '{{.ECR_HOST}}'
      REPO_NAME: '{{.REPO_NAME}}'
    requires:
      vars: [ECR_HOST, REPO_NAME]
    deps:
      - task: ecr-login
        vars:
          ECR_HOST: '{{.ECR_HOST}}'
    cmds:
      - docker run --rm --volume $HOME:/localhost {{.ECR_HOST}}/{{.REPO_NAME}}:latest init | bash
