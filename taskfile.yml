version: '3'

vars:
  AWS_REGION: "eu-west-2"
  TEMP_ROLE:
    sh: aws sts assume-role --role-arn arn:aws:iam::$AWS_ACCOUNT_ID_NONPROD:role/uec-sf-jenkins-assume-role --duration-seconds 3600
  AWS_ACCESS_KEY_ID:
    sh: echo '{{.TEMP_ROLE}}' | jq -r '.Credentials.AccessKeyId'
  AWS_SECRET_ACCESS_KEY:
    sh: echo '{{.TEMP_ROLE}}' | jq -r '.Credentials.SecretAccessKey'
  AWS_SESSION_TOKEN:
    sh: echo '{{.TEMP_ROLE}}' | jq -r '.Credentials.SessionToken'
  CONFIG:
    sh: 'AWS_ACCESS_KEY_ID={{.AWS_ACCESS_KEY_ID}} && AWS_SECRET_ACCESS_KEY={{.AWS_SECRET_ACCESS.KEY}} && AWS_SESSION_TOKEN={{.AWS_SESSION_TOKEN}} && aws secretsmanager get-secret-value --secret-id uec-sf-sfrunner/deployment --region {{.AWS_REGION}} --output json | jq -r ".SecretString | fromjson"'
  ECR_HOST:
    sh: jq -nr '{{.CONFIG}}.ECR_HOST'
  REPO_NAME:
    sh: jq -nr '{{.CONFIG}}.REPO_NAME'
  ECR_REPO: '{{.ECR_HOST}}/{{.REPO_NAME}}'



includes:
  infra:
    taskfile: infrastructure/taskfile.yml

tasks:
  build:
    desc: Build this docker image
    dir: src
    cmds:
      - docker build -t sfrunner:latest .

  run:
    desc: Runs a shell inside the sfrunner image
    cmds:
      - docker run --rm --volume $HOME:/localhost sfrunner:latest --login

  install:
    desc: Gives script to install 'sfrunner' as local command
    cmds:
      - docker run --rm --volume $HOME:/localhost sfrunner:latest init | bash


  ecr-login:
    internal: false
    desc: Docker login to ECR so one can send/receive docker images.  Must have role assumed, via Leapp
    cmds:
      - aws ecr get-login-password --region {{.AWS_REGION}} | docker login --username AWS --password-stdin {{.ECR_HOST}}

  ecr-push:
    desc: Pushes the sfrunner image to ECR
    cmds:
      - task: ecr-login
      - docker tag sfrunner:latest {{.ECR_REPO}}:latest
      - docker push {{.ECR_REPO}}:latest
