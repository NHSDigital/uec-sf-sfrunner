#
# Used by Jenkins to create the ECR repository
#

version: '3'

vars:
  AWS_REGION: "eu-west-2"
  CONFIG:
    sh: 'aws secretsmanager get-secret-value --secret-id uec-sf-sfrunner/deployment --region {{.AWS_REGION}} --output json | jq -r ".SecretString | fromjson"'
  ECR_HOST:
    sh: jq -nr '{{.CONFIG}}.ECR_HOST'
  REPO_NAME:
    sh: jq -nr '{{.CONFIG}}.REPO_NAME'
  ECR_REPO: '{{.ECR_HOST}}/{{.REPO_NAME}}'

tasks:

  create-plugin-cache-dir:
    desc: Create the plugin cache directory
    vars:
      HOME_DIR:
        sh: if [ -n "$GEODESIC_VERSION" ]; then echo "/localhost"; else echo "$JENKINS_AGENT_WORKDIR"; fi
    cmds:
      - 'mkdir -p {{.HOME_DIR}}/.terraform.d/plugin-cache'

  init:
    desc: Initialise the terraform root
    dir: '{{.ROOT_DIR}}/infrastructure/stacks/ecr'
    vars:
      TERRAFORM_STATE_STORE:
        sh: jq -nr '{{.CONFIG}}.TERRAFORM_STATE_STORE'
      TERRAFORM_STATE_LOCK:
        sh: jq -nr '{{.CONFIG}}.TERRAFORM_STATE_LOCK'
      TERRAFORM_STATE_KEY:
        sh: jq -nr '{{.CONFIG}}.TERRAFORM_STATE_KEY'
      REPO_NAME:
        sh: jq -nr '{{.CONFIG}}.REPO_NAME'
    cmds:
      - terraform --version
      - task: create-plugin-cache-dir
      - terraform init -no-color -backend-config="bucket={{.TERRAFORM_STATE_STORE}}" -backend-config="dynamodb_table={{.TERRAFORM_STATE_LOCK}}" -backend-config="encrypt=true" -backend-config="key={{.TERRAFORM_STATE_KEY}}/terraform.state" -backend-config="region={{.AWS_REGION}}" -backend-config="workspace_key_prefix=uec-sf/sfrunner"

  plan:
    desc: Plan the infrastructure changes
    dir: '{{.ROOT_DIR}}/infrastructure/stacks/ecr'
    vars:
      REPO_NAME:
        sh: jq -nr '{{.CONFIG}}.REPO_NAME'
    env:
      TF_VAR_aws_region: '{{.AWS_REGION}}'
      TF_VAR_repo_name: '{{.REPO_NAME}}'
    cmds:
      - echo "TF_VAR_repo_name=$TF_VAR_repo_name"
      - terraform plan -out=tfplan -no-color

  apply:
    desc: Apply the infrastructure changes
    dir: '{{.ROOT_DIR}}/infrastructure/stacks/ecr'
    vars:
      REPO_NAME:
        sh: jq -nr '{{.CONFIG}}.REPO_NAME'
    env:
      TF_VAR_aws_region: '{{.AWS_REGION}}'
      TF_VAR_repo_name: '{{.REPO_NAME}}'
    cmds:
      - echo "TF_VAR_repo_name=$TF_VAR_repo_name"
      - terraform apply "tfplan" -no-color


